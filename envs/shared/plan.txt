[0m[1mdata.aws_route53_zone.main: Reading...[0m[0m
[0m[1mmodule.s3_logs_bucket.data.aws_caller_identity.current: Reading...[0m[0m
[0m[1mmodule.s3_logs_bucket.data.aws_caller_identity.current: Read complete after 0s [id=367101965993][0m
[0m[1mdata.aws_route53_zone.main: Read complete after 0s [id=Z0264972SONOTDE4YLM][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m
 [36m<=[0m read (data resources)[0m

Terraform will perform the following actions:

[1m  # module.acm_alb.aws_acm_certificate.this[0m will be created
[0m  [32m+[0m[0m resource "aws_acm_certificate" "this" {
      [32m+[0m[0m arn                       = (known after apply)
      [32m+[0m[0m domain_name               = "classique.projectdemocloud.com"
      [32m+[0m[0m domain_validation_options = [
          [32m+[0m[0m {
              [32m+[0m[0m domain_name           = "classique.projectdemocloud.com"
              [32m+[0m[0m resource_record_name  = (known after apply)
              [32m+[0m[0m resource_record_type  = (known after apply)
              [32m+[0m[0m resource_record_value = (known after apply)
            },
        ]
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m key_algorithm             = (known after apply)
      [32m+[0m[0m not_after                 = (known after apply)
      [32m+[0m[0m not_before                = (known after apply)
      [32m+[0m[0m pending_renewal           = (known after apply)
      [32m+[0m[0m renewal_eligibility       = (known after apply)
      [32m+[0m[0m renewal_summary           = (known after apply)
      [32m+[0m[0m status                    = (known after apply)
      [32m+[0m[0m subject_alternative_names = [
          [32m+[0m[0m "classique.projectdemocloud.com",
        ]
      [32m+[0m[0m tags_all                  = (known after apply)
      [32m+[0m[0m type                      = (known after apply)
      [32m+[0m[0m validation_emails         = (known after apply)
      [32m+[0m[0m validation_method         = "DNS"

      [32m+[0m[0m options (known after apply)
    }

[1m  # module.acm_alb.aws_acm_certificate_validation.this[0m will be created
[0m  [32m+[0m[0m resource "aws_acm_certificate_validation" "this" {
      [32m+[0m[0m certificate_arn         = (known after apply)
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m validation_record_fqdns = (known after apply)
    }

[1m  # module.acm_alb.aws_route53_record.validation["classique.projectdemocloud.com"][0m will be created
[0m  [32m+[0m[0m resource "aws_route53_record" "validation" {
      [32m+[0m[0m allow_overwrite = (known after apply)
      [32m+[0m[0m fqdn            = (known after apply)
      [32m+[0m[0m id              = (known after apply)
      [32m+[0m[0m name            = (known after apply)
      [32m+[0m[0m records         = (known after apply)
      [32m+[0m[0m ttl             = 60
      [32m+[0m[0m type            = (known after apply)
      [32m+[0m[0m zone_id         = "Z0264972SONOTDE4YLM"
    }

[1m  # module.acm_cloudfront.aws_acm_certificate.this[0m will be created
[0m  [32m+[0m[0m resource "aws_acm_certificate" "this" {
      [32m+[0m[0m arn                       = (known after apply)
      [32m+[0m[0m domain_name               = "serverless.projectdemocloud.com"
      [32m+[0m[0m domain_validation_options = [
          [32m+[0m[0m {
              [32m+[0m[0m domain_name           = "serverless.projectdemocloud.com"
              [32m+[0m[0m resource_record_name  = (known after apply)
              [32m+[0m[0m resource_record_type  = (known after apply)
              [32m+[0m[0m resource_record_value = (known after apply)
            },
        ]
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m key_algorithm             = (known after apply)
      [32m+[0m[0m not_after                 = (known after apply)
      [32m+[0m[0m not_before                = (known after apply)
      [32m+[0m[0m pending_renewal           = (known after apply)
      [32m+[0m[0m renewal_eligibility       = (known after apply)
      [32m+[0m[0m renewal_summary           = (known after apply)
      [32m+[0m[0m status                    = (known after apply)
      [32m+[0m[0m subject_alternative_names = [
          [32m+[0m[0m "serverless.projectdemocloud.com",
        ]
      [32m+[0m[0m tags_all                  = (known after apply)
      [32m+[0m[0m type                      = (known after apply)
      [32m+[0m[0m validation_emails         = (known after apply)
      [32m+[0m[0m validation_method         = "DNS"

      [32m+[0m[0m options (known after apply)
    }

[1m  # module.acm_cloudfront.aws_acm_certificate_validation.this[0m will be created
[0m  [32m+[0m[0m resource "aws_acm_certificate_validation" "this" {
      [32m+[0m[0m certificate_arn         = (known after apply)
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m validation_record_fqdns = (known after apply)
    }

[1m  # module.acm_cloudfront.aws_route53_record.validation["serverless.projectdemocloud.com"][0m will be created
[0m  [32m+[0m[0m resource "aws_route53_record" "validation" {
      [32m+[0m[0m allow_overwrite = (known after apply)
      [32m+[0m[0m fqdn            = (known after apply)
      [32m+[0m[0m id              = (known after apply)
      [32m+[0m[0m name            = (known after apply)
      [32m+[0m[0m records         = (known after apply)
      [32m+[0m[0m ttl             = 60
      [32m+[0m[0m type            = (known after apply)
      [32m+[0m[0m zone_id         = "Z0264972SONOTDE4YLM"
    }

[1m  # module.cloudtrail.aws_cloudtrail.main[0m will be created
[0m  [32m+[0m[0m resource "aws_cloudtrail" "main" {
      [32m+[0m[0m arn                           = (known after apply)
      [32m+[0m[0m enable_log_file_validation    = true
      [32m+[0m[0m enable_logging                = true
      [32m+[0m[0m home_region                   = (known after apply)
      [32m+[0m[0m id                            = (known after apply)
      [32m+[0m[0m include_global_service_events = true
      [32m+[0m[0m is_multi_region_trail         = true
      [32m+[0m[0m is_organization_trail         = false
      [32m+[0m[0m kms_key_id                    = (known after apply)
      [32m+[0m[0m name                          = "projet-s-vs-c-2025-cloudtrail"
      [32m+[0m[0m s3_bucket_name                = (known after apply)
      [32m+[0m[0m sns_topic_arn                 = (known after apply)
      [32m+[0m[0m tags                          = {
          [32m+[0m[0m "Environment" = "shared"
          [32m+[0m[0m "Project"     = "S_Vs_C_2025"
        }
      [32m+[0m[0m tags_all                      = {
          [32m+[0m[0m "Environment" = "shared"
          [32m+[0m[0m "Project"     = "S_Vs_C_2025"
        }
    }

[1m  # module.db_secret_classique.aws_secretsmanager_secret.this[0m will be created
[0m  [32m+[0m[0m resource "aws_secretsmanager_secret" "this" {
      [32m+[0m[0m arn                            = (known after apply)
      [32m+[0m[0m description                    = "Identifiants DB pour l'architecture classique"
      [32m+[0m[0m force_overwrite_replica_secret = false
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m name                           = (known after apply)
      [32m+[0m[0m name_prefix                    = (known after apply)
      [32m+[0m[0m policy                         = (known after apply)
      [32m+[0m[0m recovery_window_in_days        = 30
      [32m+[0m[0m tags                           = {
          [32m+[0m[0m "env"     = "classique"
          [32m+[0m[0m "project" = "S_Vs_C_2025"
        }
      [32m+[0m[0m tags_all                       = {
          [32m+[0m[0m "env"     = "classique"
          [32m+[0m[0m "project" = "S_Vs_C_2025"
        }

      [32m+[0m[0m replica (known after apply)
    }

[1m  # module.db_secret_classique.aws_secretsmanager_secret_version.this[0m will be created
[0m  [32m+[0m[0m resource "aws_secretsmanager_secret_version" "this" {
      [32m+[0m[0m arn                  = (known after apply)
      [32m+[0m[0m has_secret_string_wo = (known after apply)
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m secret_id            = (known after apply)
      [32m+[0m[0m secret_string        = (sensitive value)
      [32m+[0m[0m secret_string_wo     = (write-only attribute)
      [32m+[0m[0m version_id           = (known after apply)
      [32m+[0m[0m version_stages       = (known after apply)
    }

[1m  # module.db_secret_classique.random_pet.suffix[0m will be created
[0m  [32m+[0m[0m resource "random_pet" "suffix" {
      [32m+[0m[0m id        = (known after apply)
      [32m+[0m[0m length    = 2
      [32m+[0m[0m separator = "-"
    }

[1m  # module.db_secret_serverless.aws_secretsmanager_secret.this[0m will be created
[0m  [32m+[0m[0m resource "aws_secretsmanager_secret" "this" {
      [32m+[0m[0m arn                            = (known after apply)
      [32m+[0m[0m description                    = "Identifiants DB pour l'architecture serverless"
      [32m+[0m[0m force_overwrite_replica_secret = false
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m name                           = (known after apply)
      [32m+[0m[0m name_prefix                    = (known after apply)
      [32m+[0m[0m policy                         = (known after apply)
      [32m+[0m[0m recovery_window_in_days        = 30
      [32m+[0m[0m tags                           = {
          [32m+[0m[0m "env"     = "serverless"
          [32m+[0m[0m "project" = "S_Vs_C_2025"
        }
      [32m+[0m[0m tags_all                       = {
          [32m+[0m[0m "env"     = "serverless"
          [32m+[0m[0m "project" = "S_Vs_C_2025"
        }

      [32m+[0m[0m replica (known after apply)
    }

[1m  # module.db_secret_serverless.aws_secretsmanager_secret_version.this[0m will be created
[0m  [32m+[0m[0m resource "aws_secretsmanager_secret_version" "this" {
      [32m+[0m[0m arn                  = (known after apply)
      [32m+[0m[0m has_secret_string_wo = (known after apply)
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m secret_id            = (known after apply)
      [32m+[0m[0m secret_string        = (sensitive value)
      [32m+[0m[0m secret_string_wo     = (write-only attribute)
      [32m+[0m[0m version_id           = (known after apply)
      [32m+[0m[0m version_stages       = (known after apply)
    }

[1m  # module.db_secret_serverless.random_pet.suffix[0m will be created
[0m  [32m+[0m[0m resource "random_pet" "suffix" {
      [32m+[0m[0m id        = (known after apply)
      [32m+[0m[0m length    = 2
      [32m+[0m[0m separator = "-"
    }

[1m  # module.s3_logs_bucket.data.aws_iam_policy_document.logs_tls[0m will be read during apply
  # (config refers to values not yet known)
[0m [36m<=[0m[0m data "aws_iam_policy_document" "logs_tls" {
      [32m+[0m[0m id            = (known after apply)
      [32m+[0m[0m json          = (known after apply)
      [32m+[0m[0m minified_json = (known after apply)

      [32m+[0m[0m statement {
          [32m+[0m[0m actions   = [
              [32m+[0m[0m "s3:*",
            ]
          [32m+[0m[0m effect    = "Deny"
          [32m+[0m[0m resources = [
              [32m+[0m[0m (known after apply),
              [32m+[0m[0m (known after apply),
            ]
          [32m+[0m[0m sid       = "DenyInsecureTransport"

          [32m+[0m[0m condition {
              [32m+[0m[0m test     = "Bool"
              [32m+[0m[0m values   = [
                  [32m+[0m[0m "false",
                ]
              [32m+[0m[0m variable = "aws:SecureTransport"
            }

          [32m+[0m[0m principals {
              [32m+[0m[0m identifiers = [
                  [32m+[0m[0m "*",
                ]
              [32m+[0m[0m type        = "*"
            }
        }
    }

[1m  # module.s3_logs_bucket.aws_kms_alias.logs[0m will be created
[0m  [32m+[0m[0m resource "aws_kms_alias" "logs" {
      [32m+[0m[0m arn            = (known after apply)
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m name           = "alias/cloudtrail-logs"
      [32m+[0m[0m name_prefix    = (known after apply)
      [32m+[0m[0m target_key_arn = (known after apply)
      [32m+[0m[0m target_key_id  = (known after apply)
    }

[1m  # module.s3_logs_bucket.aws_kms_key.logs[0m will be created
[0m  [32m+[0m[0m resource "aws_kms_key" "logs" {
      [32m+[0m[0m arn                                = (known after apply)
      [32m+[0m[0m bypass_policy_lockout_safety_check = false
      [32m+[0m[0m customer_master_key_spec           = "SYMMETRIC_DEFAULT"
      [32m+[0m[0m deletion_window_in_days            = 30
      [32m+[0m[0m description                        = "CMK for CloudTrail logs bucket"
      [32m+[0m[0m enable_key_rotation                = true
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m is_enabled                         = true
      [32m+[0m[0m key_id                             = (known after apply)
      [32m+[0m[0m key_usage                          = "ENCRYPT_DECRYPT"
      [32m+[0m[0m multi_region                       = (known after apply)
      [32m+[0m[0m policy                             = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "kms:*"
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m AWS = "arn:aws:iam::367101965993:root"
                        }
                      [32m+[0m[0m Resource  = "*"
                      [32m+[0m[0m Sid       = "EnableRootAdmin"
                    },
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = [
                          [32m+[0m[0m "kms:GenerateDataKey*",
                          [32m+[0m[0m "kms:Decrypt",
                        ]
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m Service = "cloudtrail.amazonaws.com"
                        }
                      [32m+[0m[0m Resource  = "*"
                      [32m+[0m[0m Sid       = "AllowCloudTrailUseOfKey"
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m rotation_period_in_days            = (known after apply)
      [32m+[0m[0m tags_all                           = (known after apply)
    }

[1m  # module.s3_logs_bucket.aws_s3_bucket.logs[0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket" "logs" {
      [32m+[0m[0m acceleration_status         = (known after apply)
      [32m+[0m[0m acl                         = (known after apply)
      [32m+[0m[0m arn                         = (known after apply)
      [32m+[0m[0m bucket                      = (known after apply)
      [32m+[0m[0m bucket_domain_name          = (known after apply)
      [32m+[0m[0m bucket_prefix               = (known after apply)
      [32m+[0m[0m bucket_regional_domain_name = (known after apply)
      [32m+[0m[0m force_destroy               = false
      [32m+[0m[0m hosted_zone_id              = (known after apply)
      [32m+[0m[0m id                          = (known after apply)
      [32m+[0m[0m object_lock_enabled         = (known after apply)
      [32m+[0m[0m policy                      = (known after apply)
      [32m+[0m[0m region                      = (known after apply)
      [32m+[0m[0m request_payer               = (known after apply)
      [32m+[0m[0m tags                        = (known after apply)
      [32m+[0m[0m tags_all                    = (known after apply)
      [32m+[0m[0m website_domain              = (known after apply)
      [32m+[0m[0m website_endpoint            = (known after apply)

      [32m+[0m[0m cors_rule (known after apply)

      [32m+[0m[0m grant (known after apply)

      [32m+[0m[0m lifecycle_rule (known after apply)

      [32m+[0m[0m logging (known after apply)

      [32m+[0m[0m object_lock_configuration (known after apply)

      [32m+[0m[0m replication_configuration (known after apply)

      [32m+[0m[0m server_side_encryption_configuration (known after apply)

      [32m+[0m[0m versioning (known after apply)

      [32m+[0m[0m website (known after apply)
    }

[1m  # module.s3_logs_bucket.aws_s3_bucket_policy.cloudtrail[0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_policy" "cloudtrail" {
      [32m+[0m[0m bucket = (known after apply)
      [32m+[0m[0m id     = (known after apply)
      [32m+[0m[0m policy = (known after apply)
    }

[1m  # module.s3_logs_bucket.aws_s3_bucket_policy.logs_tls[0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_policy" "logs_tls" {
      [32m+[0m[0m bucket = (known after apply)
      [32m+[0m[0m id     = (known after apply)
      [32m+[0m[0m policy = (known after apply)
    }

[1m  # module.s3_logs_bucket.aws_s3_bucket_server_side_encryption_configuration.logs[0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_server_side_encryption_configuration" "logs" {
      [32m+[0m[0m bucket = (known after apply)
      [32m+[0m[0m id     = (known after apply)

      [32m+[0m[0m rule {
          [32m+[0m[0m bucket_key_enabled = true

          [32m+[0m[0m apply_server_side_encryption_by_default {
              [32m+[0m[0m kms_master_key_id = (known after apply)
              [32m+[0m[0m sse_algorithm     = "aws:kms"
            }
        }
    }

[1m  # module.s3_logs_bucket.aws_s3_bucket_versioning.logs[0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_versioning" "logs" {
      [32m+[0m[0m bucket = (known after apply)
      [32m+[0m[0m id     = (known after apply)

      [32m+[0m[0m versioning_configuration {
          [32m+[0m[0m mfa_delete = (known after apply)
          [32m+[0m[0m status     = "Enabled"
        }
    }

[1m  # module.s3_logs_bucket.random_pet.suffix[0m will be created
[0m  [32m+[0m[0m resource "random_pet" "suffix" {
      [32m+[0m[0m id        = (known after apply)
      [32m+[0m[0m length    = 2
      [32m+[0m[0m separator = "-"
    }

[1m  # module.vpc.aws_internet_gateway.igw[0m will be created
[0m  [32m+[0m[0m resource "aws_internet_gateway" "igw" {
      [32m+[0m[0m arn      = (known after apply)
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m owner_id = (known after apply)
      [32m+[0m[0m tags     = {
          [32m+[0m[0m "Environment" = "shared"
          [32m+[0m[0m "Name"        = "my-vpc-shared-2025-igw"
          [32m+[0m[0m "Project"     = "S_Vs_C_2025"
        }
      [32m+[0m[0m tags_all = {
          [32m+[0m[0m "Environment" = "shared"
          [32m+[0m[0m "Name"        = "my-vpc-shared-2025-igw"
          [32m+[0m[0m "Project"     = "S_Vs_C_2025"
        }
      [32m+[0m[0m vpc_id   = (known after apply)
    }

[1m  # module.vpc.aws_vpc.main[0m will be created
[0m  [32m+[0m[0m resource "aws_vpc" "main" {
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m cidr_block                           = "10.0.0.0/16"
      [32m+[0m[0m default_network_acl_id               = (known after apply)
      [32m+[0m[0m default_route_table_id               = (known after apply)
      [32m+[0m[0m default_security_group_id            = (known after apply)
      [32m+[0m[0m dhcp_options_id                      = (known after apply)
      [32m+[0m[0m enable_dns_hostnames                 = true
      [32m+[0m[0m enable_dns_support                   = true
      [32m+[0m[0m enable_network_address_usage_metrics = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_tenancy                     = "default"
      [32m+[0m[0m ipv6_association_id                  = (known after apply)
      [32m+[0m[0m ipv6_cidr_block                      = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_network_border_group = (known after apply)
      [32m+[0m[0m main_route_table_id                  = (known after apply)
      [32m+[0m[0m owner_id                             = (known after apply)
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Environment" = "shared"
          [32m+[0m[0m "Name"        = "my-vpc-shared-2025"
          [32m+[0m[0m "Project"     = "S_Vs_C_2025"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Environment" = "shared"
          [32m+[0m[0m "Name"        = "my-vpc-shared-2025"
          [32m+[0m[0m "Project"     = "S_Vs_C_2025"
        }
    }

[1mPlan:[0m 23 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m acm_alb_arn               = (known after apply)
  [32m+[0m[0m acm_cloudfront_arn        = (known after apply)
  [32m+[0m[0m cloudtrail_arn            = (known after apply)
  [32m+[0m[0m db_classique_secret_name  = (known after apply)
  [32m+[0m[0m db_serverless_secret_name = (known after apply)
  [32m+[0m[0m igw_id                    = (known after apply)
  [32m+[0m[0m logs_bucket_arn           = (known after apply)
  [32m+[0m[0m logs_bucket_name          = (known after apply)
  [32m+[0m[0m vpc_cidr                  = "10.0.0.0/16"
  [32m+[0m[0m vpc_id                    = (known after apply)
[90m
─────────────────────────────────────────────────────────────────────────────[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
